// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VTS.DAL;

namespace VTS.Web.Migrations
{
    [DbContext(typeof(VTSDbContext))]
    partial class VTSDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VTS.DAL.Entities.Clerk", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("HeadId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("HeadId")
                        .IsUnique();

                    b.ToTable("Clerks");
                });

            modelBuilder.Entity("VTS.DAL.Entities.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ManagerId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("VTS.DAL.Entities.Head", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Heads");
                });

            modelBuilder.Entity("VTS.DAL.Entities.Holiday", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2");

                    b.Property<long>("Hours")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SubmissionTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Holidays");
                });

            modelBuilder.Entity("VTS.DAL.Entities.HolidayAcception", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<long>("HeadId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("HolidayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HeadId");

                    b.HasIndex("HolidayId")
                        .IsUnique();

                    b.ToTable("HolidaysAcception");
                });

            modelBuilder.Entity("VTS.DAL.Entities.Manager", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("HeadId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("HeadId")
                        .IsUnique();

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("VTS.DAL.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VTS.DAL.Entities.UserVacationInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("BonusPaidDayOffs")
                        .HasColumnType("bigint");

                    b.Property<long>("PaidDayOffs")
                        .HasColumnType("bigint");

                    b.Property<long>("PaidSickness")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartedWorking")
                        .HasColumnType("datetime2");

                    b.Property<long>("UnPaidDayOffs")
                        .HasColumnType("bigint");

                    b.Property<long>("UnPaidSickness")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UsersVacationInfo");
                });

            modelBuilder.Entity("VTS.DAL.Entities.Clerk", b =>
                {
                    b.HasOne("VTS.DAL.Entities.Head", "Head")
                        .WithOne("Clerk")
                        .HasForeignKey("VTS.DAL.Entities.Clerk", "HeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VTS.DAL.Entities.Employee", b =>
                {
                    b.HasOne("VTS.DAL.Entities.Manager", "Manager")
                        .WithMany("Subordinates")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("VTS.DAL.Entities.User", "User")
                        .WithOne("Employee")
                        .HasForeignKey("VTS.DAL.Entities.Employee", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VTS.DAL.Entities.Head", b =>
                {
                    b.HasOne("VTS.DAL.Entities.User", "User")
                        .WithOne("Head")
                        .HasForeignKey("VTS.DAL.Entities.Head", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VTS.DAL.Entities.Holiday", b =>
                {
                    b.HasOne("VTS.DAL.Entities.User", "User")
                        .WithMany("Holidays")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VTS.DAL.Entities.HolidayAcception", b =>
                {
                    b.HasOne("VTS.DAL.Entities.Head", "Head")
                        .WithMany("HolidayAcception")
                        .HasForeignKey("HeadId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("VTS.DAL.Entities.Holiday", "Holiday")
                        .WithOne("HolidayAcception")
                        .HasForeignKey("VTS.DAL.Entities.HolidayAcception", "HolidayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VTS.DAL.Entities.Manager", b =>
                {
                    b.HasOne("VTS.DAL.Entities.Head", "Head")
                        .WithOne("Manager")
                        .HasForeignKey("VTS.DAL.Entities.Manager", "HeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VTS.DAL.Entities.UserVacationInfo", b =>
                {
                    b.HasOne("VTS.DAL.Entities.User", "User")
                        .WithOne("UserVacationInfo")
                        .HasForeignKey("VTS.DAL.Entities.UserVacationInfo", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
